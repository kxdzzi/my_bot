# coding:utf-8
import random
import math
from src.utils.db import db

text = "翊哈天地玄黄宇宙洪荒日月盈昃辰宿列张寒来暑往秋收冬藏闰余成岁律吕调阳苍腾致"\
       "雨露结为霜金生丽水玉出昆冈剑号巨阙珠称夜光果珍李柰菜重芥姜海咸河淡鳞潜羽翔"\
       "龙师火帝鸟官人皇始制文字乃服衣裳推位让国有虞陶唐吊民伐罪周发殷汤坐朝问道垂"\
       "拱平章爱育黎首臣伏戎羌遐迩一体率宾归王鸣凤在竹白驹食场化被草木赖及万方盖此"\
       "身发四大五常恭惟鞠养岂敢毁伤女慕贞洁男效才良知过必改得能莫忘罔谈彼短靡恃己"\
       "长信使可覆器欲难量墨悲丝染诗赞羔羊景行维贤克念作圣德建名立形端表正空谷传声"\
       "虚堂习听祸因恶积福缘善庆尺璧非宝寸阴是竞资父事君曰严与敬孝当竭力忠则尽命临"\
       "深履薄夙兴温凊似兰斯馨如松之盛川流不息渊澄取映容止若思言辞安定笃初诚美慎终"\
       "宜令荣业所基籍甚无竟学优登仕摄职从政存以甘棠去而益咏乐殊贵贱礼别尊卑上和下"\
       "睦夫唱妇随外受傅训入奉母仪诸姑伯叔犹子比儿孔怀兄弟同气连枝交友投分切磨箴规"\
       "仁慈隐恻造次弗离节义廉退颠沛匪亏性静情逸心动神疲守真志满逐物意移坚持雅操好"\
       "爵自縻都邑华夏东西二京背邙面洛浮渭据泾宫殿盘郁楼观飞惊图写禽兽画彩仙灵丙舍"\
       "旁启甲帐对楹肆筵设席鼓瑟吹笙升阶纳陛弁转疑星右通广内左达承明既集坟典亦聚群"\
       "英杜稿钟隶漆书壁经府罗将相路侠槐卿户封八县家给千兵高冠陪辇驱毂振缨世禄侈富"\
       "车驾肥轻策功茂实勒碑刻铭磻溪伊尹佐时阿衡奄宅曲阜微旦孰营桓公匡合济弱扶倾绮"\
       "回汉惠说感武丁俊义密勿多士实宁晋楚更霸赵魏困横假途灭虢践土会盟何遵约法韩弊"\
       "烦刑起翦颇牧用军最精宣威沙漠驰誉丹青九州禹迹百郡秦并岳宗泰岱禅主云亭雁门紫"\
       "塞鸡田赤城昆池碣石钜野洞庭旷远绵邈岩岫杳冥治本于农务兹稼穑俶载南亩我艺黍稷"\
       "税熟贡新劝赏黜陟孟轲敦素史鱼秉直庶几中庸劳谦谨敕聆音察理鉴貌辨色贻厥嘉猷勉"\
       "其祗植省躬讥诫宠增抗极殆辱近耻林皋幸即两疏见机解组谁逼索居闲处沉默寂寥求古"\
       "寻论散虑逍遥欣奏累遣戚谢欢招渠荷的历园莽抽条枇杷晚翠梧桐蚤凋陈根委翳落叶飘"\
       "摇游鹍独运凌摩绛霄耽读玩市寓目囊箱易輶攸畏属耳垣墙具膳餐饭适口充肠饱饫烹宰"\
       "饥厌糟糠亲戚故旧老少异粮妾御绩纺侍巾帷房纨扇圆洁银烛炜煌昼眠夕寐蓝笋象床弦"\
       "歌酒宴接杯举觞矫手顿足悦豫且康嫡后嗣续祭祀烝尝稽颡再拜悚惧恐惶笺牒简要顾答"\
       "审详骸垢想浴执热愿凉驴骡犊特骇跃超骧诛斩贼盗捕获叛亡布射僚丸嵇琴阮啸恬笔伦"\
       "纸钧巧任钓释纷利俗并皆佳妙毛施淑姿工颦妍笑年矢每催曦晖朗曜璇玑悬斡晦魄环照"\
       "指薪修祜永绥吉劭矩步引领俯仰廊庙束带矜庄徘徊瞻眺孤陋寡闻愚蒙等诮谓语助者焉"\
       "哉乎也虎狼胥鬼瑶谣碧猫乾坤巽震艮兑坎孙破杀斗镜花北七六三萧梅菊风"

材料等级表 = {
    "赤": 1,
    "橙": 2,
    "黄": 3,
    "绿": 4,
    "青": 5,
    "蓝": 6,
    "紫": 7,
    "彩": 8,
}

装备基础属性 = {
    "武器金": ["力道", "身法", "体质"],
    "武器木": ["元气", "根骨", "体质"],
    "武器水": ["体质", "根骨", "身法"],
    "武器火": ["力道", "元气", "身法", "根骨"],
    "武器土": ["体质", "根骨", "身法"],
    "外装金": ["力道", "体质"],
    "外装木": ["元气", "体质"],
    "外装水": ["体质", "身法"],
    "外装火": ["体质", "力道", "元气"],
    "外装土": ["体质", "根骨", "身法"],
    "饰品金": ["根骨", "体质"],
    "饰品木": ["身法", "体质"],
    "饰品水": ["身法", "根骨"],
    "饰品火": ["元气", "力道"],
    "饰品土": ["体质", "根骨", "身法"],
}

装备附加属性 = {
    "武器金": ["外功攻击", "外功穿透", "速度"],
    "武器木": ["内功攻击", "内功穿透", "速度"],
    "武器水": ["速度", "内力上限", "气血上限"],
    "武器火": ["外功攻击", "内功攻击", "外功穿透", "内功穿透"],
    "武器土": ["外功攻击", "内功攻击", "外功防御", "内功防御", "气血上限"],
    "外装金": ["外功防御", "外功攻击", "外功穿透"],
    "外装木": ["内功防御", "内功攻击", "内功穿透"],
    "外装水": ["速度", "气血上限", "状态抗性"],
    "外装火": ["内功攻击", "外功攻击", "速度"],
    "外装土": ["气血上限", "内功防御", "外功防御"],
    "饰品金": ["状态抗性", "内功防御", "内力上限"],
    "饰品木": ["状态抗性", "内功防御", "内力上限"],
    "饰品水": ["速度", "内力上限", "状态抗性"],
    "饰品火": ["内功攻击", "外功攻击", "内力上限"],
    "饰品土": ["内功防御", "外功防御", "气血上限"],
}

装备类型 = {
    "武器金": "剑",
    "武器木": "杖",
    "武器水": "扇",
    "武器火": "灯",
    "武器土": "锤",
    "外装金": "甲",
    "外装木": "服",
    "外装水": "衫",
    "外装火": "袍",
    "外装土": "铠",
    "饰品金": "链",
    "饰品木": "牌",
    "饰品水": "坠",
    "饰品火": "玦",
    "饰品土": "环",
}

装备类型表 = {
    "剑": "武器",
    "杖": "武器",
    "扇": "武器",
    "灯": "武器",
    "锤": "武器",
    "甲": "外装",
    "服": "外装",
    "衫": "外装",
    "袍": "外装",
    "铠": "外装",
    "链": "饰品",
    "牌": "饰品",
    "坠": "饰品",
    "玦": "饰品",
    "环": "饰品",
}

装备属性表 = {
    "剑": "武器金",
    "杖": "武器木",
    "扇": "武器水",
    "灯": "武器火",
    "锤": "武器土",
    "甲": "外装金",
    "服": "外装木",
    "衫": "外装水",
    "袍": "外装火",
    "铠": "外装土",
    "链": "饰品金",
    "牌": "饰品木",
    "坠": "饰品水",
    "玦": "饰品火",
    "环": "饰品土",
}

附加属性比例 = {
    "气血上限": 30,
    "内力上限": 5,
    "外功攻击": 2,
    "内功攻击": 2,
    "外功防御": 4,
    "内功防御": 4,
    "外功穿透": 4,
    "内功穿透": 4,
    "状态抗性": 1,
    "速度": 1,
}


镶嵌属性表 = {
    "金": ["外功攻击", "外功穿透"],
    "木": ["内功攻击", "内功穿透"],
    "水": ["内力上限", "状态抗性"],
    "火": ["速度", "内功防御"],
    "土": ["气血上限", "外功防御"],
}


def 随机拆分整数(拆分数量, 数字):
    list1 = []
    for i in range(0, 拆分数量-1):
        a = random.randint(0,数字)    # 生成 n-1 个随机节点
        list1.append(a)
    list1.sort()                        # 节点排序
    list1.append(数字)                # 设置第 n 个节点为amount，即总金额

    list2 = []
    for i in range(len(list1)):
        if i == 0:
            b = list1[i]                # 第一段长度为第 1 个节点 - 0
        else:
            b = list1[i] - list1[i-1]   # 其余段为第 n 个节点 - 第 n-1 个节点
        list2.append(b)
    return list2


def 镶嵌装备(装备, 材料, 善恶值):
    材料颜色, 材料属性 = list(材料)
    材料等级 = 材料等级表[材料颜色]
    附加数量上限 = 2 if 材料等级 >= 6 else 1
    附加数量 = random.randint(1, 附加数量上限)
    附加属性项 = list(set(random.choices(镶嵌属性表[材料属性], k=附加数量)))
    镶嵌属性 = {}
    镶嵌分数 = 0

    材料分 = 3**(材料等级-1)
    材料属性值 = (random.randint(1, 材料分) + random.randint(1, 材料分) + random.randint(1, 材料分))
    材料属性值 = int(材料属性值 * (1/(1+math.e**(-善恶值/200))+0.2)) + 5

    for i in 附加属性项:
        增加值 = random.randint(1, 材料属性值-2)
        镶嵌属性[i] = 增加值 * 附加属性比例[i]
        镶嵌分数 += 增加值
        材料属性值 -= 增加值
    装备["镶嵌属性"] = 镶嵌属性
    装备["镶嵌分数"] = 镶嵌分数
    return 装备


def 重铸装备(装备):
    装备分数 = 装备["装备分数"]
    装备属性 = 装备属性表[装备["_id"][-1]]
    装备["基础属性"] = {}
    装备["附加属性"] = {}
    基础属性项 = list(set(random.choices(装备基础属性[装备属性], k=2)))

    if 装备分数 < 2000:
        附加数量 = random.randint(0, 1)
    elif 装备分数 < 6000:
        附加数量 = random.randint(1, 2)
    else:
        附加数量 = random.randint(2, 3)
    附加属性项 = list(set(random.choices(装备附加属性[装备属性], k=附加数量)))
    if 附加数量:
        基础属性增加值, 附加属性增加值 = 随机拆分整数(2, 装备分数)
        if 基础属性增加值 < 5:
            基础属性增加值 += 5
            附加属性增加值 -= 5
        elif 附加属性增加值 < 5:
            附加属性增加值 += 5
            基础属性增加值 -= 5
    else:
        基础属性增加值 = 装备分数
    for 属性, 数值 in zip(基础属性项, 随机拆分整数(len(基础属性项), 基础属性增加值)):
        if 属性 not in 装备["基础属性"]:
            装备["基础属性"][属性] = 0
        装备["基础属性"][属性] += 数值
    if 附加数量:
        for 属性, 数值 in zip(附加属性项, 随机拆分整数(len(附加属性项), 附加属性增加值)):
            if 属性 not in 装备["附加属性"]:
                装备["附加属性"][属性] = 0
            装备["附加属性"][属性] += 数值 * 附加属性比例[属性]
    else:
        del 装备["附加属性"]
    return 装备


def 打造装备(材料, 图纸):
    材料颜色, 材料属性 = list(材料)
    图纸样式, 图纸等级 = 图纸[:2], 图纸[2:]
    名称 = "".join(random.choices(text, k=2)) + 装备类型[图纸样式 + 材料属性]
    if db.equip.find_one({"_id": 名称}):
        名称 = "".join(random.choices(text, k=4)) + 装备类型[图纸样式 + 材料属性]
    装备 = {"_id": 名称, "基础属性": {}}
    材料等级 = 材料等级表[材料颜色]
    材料属性值 = 3**材料等级
    图纸等级 = int(图纸等级)
    图纸属性值 = random.randint(int(图纸等级 / 2)+1, 图纸等级 * 3)
    基础属性项 = list(set(random.choices(装备基础属性[图纸样式 + 材料属性], k=2)))
    if 材料等级 < 3:
        附加数量 = random.randint(0, 1)
    elif 材料等级 < 5:
        附加数量 = random.randint(1, 2)
    else:
        附加数量 = random.randint(2, 3)
    附加属性项 = list(set(random.choices(装备附加属性[图纸样式 + 材料属性], k=附加数量)))
    if 材料属性值 < 图纸属性值:
        材料属性值, 图纸属性值 = 图纸属性值, 材料属性值
    全部增加数值 = random.randint(图纸属性值, 材料属性值)
    基础属性增加值 = random.randint(1, 全部增加数值)
    附加属性增加值 = 全部增加数值 - 基础属性增加值
    装备分数 = 0
    for i in 基础属性项:
        增加值 = random.randint(基础属性增加值//3+1, 基础属性增加值 + 2)
        装备["基础属性"][i] = 增加值
        装备分数 += 增加值
        基础属性增加值 -= 增加值 - 3
    if 附加属性增加值 and 附加属性项:
        装备["附加属性"] = {}
        for i in 附加属性项:
            增加值 = random.randint(附加属性增加值//(附加数量+1)+1, 附加属性增加值 + 2)
            装备["附加属性"][i] = 增加值 * 附加属性比例[i] + random.randint(1, 5)
            装备分数 += 增加值
            附加属性增加值 -= 增加值 - 3
    装备["装备分数"] = 装备分数
    装备["类型"] = 图纸样式[:2]
    return 装备


def 合成材料(材料):
    等级顺序 = "赤橙黄绿青蓝紫彩"
    材料颜色, 材料属性 = list(材料)
    材料等级 = 材料等级表[材料颜色]
    if 材料等级 * 10 < random.randint(1, 100):
        获得材料 = 等级顺序[材料等级] + 材料属性
        合成结果 = "合成成功"
    else:
        获得材料 = 材料
        合成结果 = "合成失败"
    return 合成结果, 获得材料


def 合成图纸(图纸一, 图纸二):
    图纸一样式, 图纸一等级 = 图纸一[:2], 图纸一[2:]
    图纸二样式, 图纸二等级 = 图纸二[:2], 图纸二[2:]
    图纸样式 = random.choice([图纸一样式, 图纸二样式])
    图纸一等级 = int(图纸一等级)
    图纸二等级 = int(图纸二等级)
    if 图纸一等级 > 1500 or 图纸二等级 > 1500:
        return "单张图纸等级不可超过1500"
    if 图纸二等级 > 图纸一等级:
        图纸二等级, 图纸一等级 = 图纸一等级, 图纸二等级
    图纸等级 = random.randint(图纸一等级 - int(图纸二等级 * 0.6), 图纸一等级 + 图纸二等级)
    return 图纸样式 + str(图纸等级)


def 装备价格(装备):
    装备价格 = 0
    for i in 装备.get("基础属性", {}).values():
        装备价格 += i * 3
    for k, v in 装备.get("附加属性", {}).items():
        v = v // 附加属性比例[k]
        装备价格 += v
    return 装备价格
